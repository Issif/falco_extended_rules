name: Release Rules

on:
  push:
    tags:
      - '*.*.*'
  
env:
  OCI_REGISTRY: ghcr.io
  RULES_NAME: falco_extended_rules
    
permissions:
  contents: write
  packages: write

jobs:
  publish-oci-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Falcoctl Repo
        uses: actions/checkout@v3
        with:
          repository: falcosecurity/falcoctl
          ref: main
          path: tools/falcoctl
      - name: Setup Golang
        uses: actions/setup-go@v4
        with:
          go-version: '^1.20'
          cache-dependency-path: tools/falcoctl/go.sum
      - name: Build falcoctl
        run: make
        working-directory: tools/falcoctl
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: rules
      - id: StringRepoName
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ github.repository }}
      - name: Upload OCI artifacts to GitHub packages
        run: |
              DIR=$(pwd)

              VERSION=$(echo ${{ github.ref_name }} | sed 's/v//')

              cd rules/rules
              for i in $(ls *.yaml);
              do
                cat ${i} >> ${{ env.RULES_NAME }}.yaml
                echo "" >> ${{ env.RULES_NAME }}.yaml
              done
              sed -i -e 's/ *$//g' ${{ env.RULES_NAME }}.yaml
              $DIR/tools/falcoctl/falcoctl registry push \
              ${{ env.OCI_REGISTRY }}/${{ steps.StringRepoName.outputs.lowercase }}/ruleset/${{ env.RULES_NAME }}:${VERSION} \
              --config /dev/null \
              --type rulesfile \
              --version "${VERSION}" \
              --tag latest --add-floating-tags \
              --name ${{ env.RULES_NAME }} \
              ${{ env.RULES_NAME }}.yaml
        env:
          FALCOCTL_REGISTRY_AUTH_BASIC: ${{ env.OCI_REGISTRY }},${{ github.repository_owner }},${{ secrets.GITHUB_TOKEN }}